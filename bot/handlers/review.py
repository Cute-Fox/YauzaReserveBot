from telebot import TeleBot, types
from sqlalchemy.ext.asyncio import async_sessionmaker

from bot.services import setting_service
from bot.async_app import schedule
from bot.utils.keyboards import main_menu


def register(bot: TeleBot, sessionmaker: async_sessionmaker) -> None:
    @bot.message_handler(func=lambda m: m.text == "üì© –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
    def handle_review(message: types.Message) -> None:
        tg_id = message.from_user.id

        async def send_contact():
            async with sessionmaker() as session:
                phone = await setting_service.get(session, "admin_phone")
                name  = await setting_service.get(session, "admin_name")

                if phone and name:
                    bot.send_message(
                        message.chat.id,
                        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å! –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ "
                        "–∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
                        reply_markup=main_menu()
                    )
                    bot.send_contact(
                        message.chat.id,
                        phone_number=phone,
                        first_name=name
                    )
                else:
                    bot.send_message(
                        message.chat.id,
                        "–ö–æ–Ω—Ç–∞–∫—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–∫–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.",
                        reply_markup=main_menu()
                    )

        schedule(send_contact())
